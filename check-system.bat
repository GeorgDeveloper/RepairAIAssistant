@echo off
setlocal enabledelayedexpansion

REM –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è Repair AI Assistant v2.0 –¥–ª—è Windows

echo üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Repair AI Assistant v2.0...
echo ==================================================

REM –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
:check_http
set url=%1
set name=%2
set expected=%3

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ %name%...
curl -s --max-time 10 "%url%" >nul 2>&1
if %errorlevel% equ 0 (
    echo   ‚úì OK
) else (
    echo   ‚úó –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω
)
goto :eof

REM –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
:check_docker_container
set container_name=%1
set service_name=%2

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ %service_name%...
docker ps --format "table {{.Names}}" | findstr /C:"%container_name%" >nul 2>&1
if %errorlevel% equ 0 (
    echo   ‚úì –ó–∞–ø—É—â–µ–Ω
) else (
    echo   ‚úó –ù–µ –Ω–∞–π–¥–µ–Ω
)
goto :eof

REM –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
:check_port
set port=%1
set service_name=%2

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ %port% (%service_name%)...
netstat -an | findstr ":%port%" | findstr "LISTENING" >nul 2>&1
if %errorlevel% equ 0 (
    echo   ‚úì –û—Ç–∫—Ä—ã—Ç
) else (
    echo   ‚úó –ó–∞–∫—Ä—ã—Ç
)
goto :eof

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
echo.
echo 1. –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
echo ------------------------

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...
docker --version >nul 2>&1
if %errorlevel% equ 0 (
    for /f "tokens=3" %%i in ('docker --version') do set docker_version=%%i
    echo   ‚úì –í–µ—Ä—Å–∏—è: !docker_version!
) else (
    echo   ‚úó –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
echo –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose...
docker-compose --version >nul 2>&1
if %errorlevel% equ 0 (
    for /f "tokens=3" %%i in ('docker-compose --version') do set compose_version=%%i
    echo   ‚úì –í–µ—Ä—Å–∏—è: !compose_version!
) else (
    echo   ‚úó –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Java
echo –ü—Ä–æ–≤–µ—Ä–∫–∞ Java...
java -version >nul 2>&1
if %errorlevel% equ 0 (
    for /f "tokens=3" %%i in ('java -version 2^>^&1 ^| findstr "version"') do set java_version=%%i
    echo   ‚úì Java —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
) else (
    echo   ‚úó –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Maven
echo –ü—Ä–æ–≤–µ—Ä–∫–∞ Maven...
mvn -version >nul 2>&1
if %errorlevel% equ 0 (
    echo   ‚úì Maven —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
) else (
    echo   ‚úó –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
echo –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞...
for /f "tokens=3" %%i in ('dir /-c ^| findstr "bytes free"') do set free_space=%%i
echo   ‚úì –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo.
echo 2. Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo ---------------------

call :check_docker_container "chromadb" "ChromaDB"
call :check_docker_container "ollama" "Ollama"  
call :check_docker_container "mysql" "MySQL"

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
echo.
echo 3. –°–µ—Ç–µ–≤—ã–µ –ø–æ—Ä—Ç—ã
echo -----------------

call :check_port 8000 "ChromaDB"
call :check_port 11434 "Ollama"
call :check_port 3306 "MySQL"
call :check_port 8080 "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo.
echo 4. HTTP —Å–µ—Ä–≤–∏—Å—ã
echo ----------------

call :check_http "http://localhost:8000/api/v1/heartbeat" "ChromaDB API"
call :check_http "http://localhost:11434/api/tags" "Ollama API"
call :check_http "http://localhost:8080/api/v2/health" "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ API"

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π Ollama
echo.
echo 5. –ú–æ–¥–µ–ª–∏ Ollama
echo -----------------

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π...
curl -s http://localhost:11434/api/tags 2>nul | findstr "deepseek-r1" >nul 2>&1
if %errorlevel% equ 0 (
    echo   ‚úì deepseek-r1 –Ω–∞–π–¥–µ–Ω–∞
) else (
    echo   ‚úó deepseek-r1 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
)

curl -s http://localhost:11434/api/tags 2>nul | findstr "nomic-embed-text" >nul 2>&1
if %errorlevel% equ 0 (
    echo   ‚úì nomic-embed-text –Ω–∞–π–¥–µ–Ω–∞
) else (
    echo   ‚úó nomic-embed-text –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π ChromaDB
echo.
echo 6. ChromaDB –∫–æ–ª–ª–µ–∫—Ü–∏–∏
echo ----------------------

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ repair_knowledge...
curl -s http://localhost:8000/api/v1/collections 2>nul | findstr "repair_knowledge" >nul 2>&1
if %errorlevel% equ 0 (
    echo   ‚úì –ù–∞–π–¥–µ–Ω–∞
) else (
    echo   ‚ö† –ù–µ –Ω–∞–π–¥–µ–Ω–∞ (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
)

REM –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
echo.
echo 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
echo --------------------------------

echo –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ AI...
curl -s -X POST http://localhost:8080/api/v2/query -H "Content-Type: application/json" -d "{\"query\": \"–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?\"}" 2>nul | findstr "response" >nul 2>&1
if %errorlevel% equ 0 (
    echo   ‚úì –†–∞–±–æ—Ç–∞–µ—Ç
) else (
    echo   ‚úó –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
)

REM –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
echo.
echo üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
echo ==================
echo –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞. –î–µ—Ç–∞–ª–∏ —Å–º. –≤—ã—à–µ.

echo.
echo üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
echo ===================
echo –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:    docker-compose restart
echo –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ ChromaDB:     docker logs chromadb -f
echo –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Ollama:       docker logs ollama -f
echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è:           curl http://localhost:8080/api/v2/health

echo.
echo ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!

pause
