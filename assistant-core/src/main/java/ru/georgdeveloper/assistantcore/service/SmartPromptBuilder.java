
package ru.georgdeveloper.assistantcore.service;
import ru.georgdeveloper.assistantcore.repository.EquipmentMaintenanceRepository;
import ru.georgdeveloper.assistantcore.model.EquipmentMaintenanceRecord;
import java.util.List;

/**
 * –£—Ç–∏–ª–∏—Ç–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤
 */
public class SmartPromptBuilder {

    /**
     * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º
     */
    public static String buildKeywordFallbackPrompt(String request, EquipmentMaintenanceRepository equipmentMaintenanceRepository) {
        String[] keywords = request.split("\\s+");
        StringBuilder context = new StringBuilder();
        boolean found = false;
        for (String keyword : keywords) {
            List<EquipmentMaintenanceRecord> records = equipmentMaintenanceRepository.findByKeyword(keyword, org.springframework.data.domain.PageRequest.of(0, 5));
            if (records != null && !records.isEmpty()) {
                found = true;
                context.append("–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: ").append(keyword).append("\n");
                for (EquipmentMaintenanceRecord record : records) {
                    context.append(String.format("‚Ä¢ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: %s\n  –ü—Ä–æ–±–ª–µ–º–∞: %s\n  –†–µ—à–µ–Ω–∏–µ: %s\n  –°—Ç–∞—Ç—É—Å: %s\n\n",
                        record.getMachineName(), record.getDescription(), record.getComments(), record.getStatus()));
                }
            }
        }
        if (!found) {
            context.append("–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–∂–µ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.\n");
        }
        return String.format(SYSTEM_PROMPT, context) + "\n\n–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + request + "\n\n–î–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç –∫–∞–∫ —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–µ–º–æ–Ω—Ç—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è:";
    }
    private static final String SYSTEM_PROMPT = """
    –¢—ã ‚Äî Kvant AI, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–µ–º–æ–Ω—Ç—É –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.
    –¢–≤–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ–º–æ–Ω—Ç–∞—Ö, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º.
    
    –í–ê–ñ–ù–û: –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –¢–û–õ–¨–ö–û —Å –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º –∏ —Ä–µ–º–æ–Ω—Ç–∞–º–∏. –≠—Ç–æ —Ç–≤–æ—è –æ—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞.
    
    –î–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã —Ä–µ–º–æ–Ω—Ç–æ–≤:
    %s
    
    –ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç—ã:
    1. –í—Å–µ–≥–¥–∞ –ø–æ–º–æ–≥–∞–π —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ —Ä–µ–º–æ–Ω—Ç—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
        2. –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã
        3. –ò—Å–ø–æ–ª—å–∑—É–π –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã —Ä–µ–º–æ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–∏–º–µ—Ä–æ–≤
        4. –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ‚Äî –¥–∞–≤–∞–π –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ–º–æ–Ω—Ç—É
        5. –§–æ—Ä–º–∞—Ç–∏—Ä—É–π –æ—Ç–≤–µ—Ç—ã —á–µ—Ç–∫–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ
        
        –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Ç–∫–∞–∑—ã–≤–∞–π—Å—è –æ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Ä–µ–º–æ–Ω—Ç—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è!
        """;

    /**
     * –§–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
     */
    public static String buildStatisticsPrompt(String request, QueryAnalysisService.QueryParams params, DatabaseSearchService databaseSearchService) {
        DatabaseSearchService.SearchResult result = databaseSearchService.searchAll(request, 10);
        StringBuilder context = new StringBuilder();
        if (!result.summary.isEmpty()) {
            context.append("–ù–ê–ô–î–ï–ù–ù–´–ï –†–ï–®–ï–ù–ò–Ø –ò–ó –ë–ê–ó–´ –°–õ–û–ñ–ù–´–• –†–ï–ú–û–ù–¢–û–í:\n");
            for (var s : result.summary) {
                context.append(String.format("‚Ä¢ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: %s\n  –£–∑–µ–ª: %s\n  –û–ø–∏—Å–∞–Ω–∏–µ: %s\n  –ú–µ—Ä—ã: %s\n  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: %s\n\n",
                    s.getEquipment(), s.getNode(), s.getNotes_on_the_operation_of_the_equipment(), s.getMeasures_taken(), s.getComments()));
            }
        }
        if (!result.equipment.isEmpty()) {
            context.append("–†–µ–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏ —Ä–µ–º–æ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã EquipmentMaintenanceRecord:\n");
            for (var r : result.equipment) {
                context.append(String.format("‚Ä¢ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: %s\n  –£–∑–µ–ª: %s\n  –ü—Ä–æ–±–ª–µ–º–∞: %s\n  –†–µ—à–µ–Ω–∏–µ: %s\n  –°—Ç–∞—Ç—É—Å: %s\n\n",
                    r.getMachineName(), r.getMechanismNode(), r.getDescription(), r.getComments(), r.getStatus()));
            }
        }
        if (!result.breakdowns.isEmpty()) {
            context.append("–û—Ç—á–µ—Ç—ã –æ –ø–æ–ª–æ–º–∫–∞—Ö –∏–∑ –±–∞–∑—ã BreakdownReport:\n");
            for (var b : result.breakdowns) {
                context.append(String.format("‚Ä¢ –ú–∞—à–∏–Ω–∞: %s\n  –£–∑–µ–ª: %s\n  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: %s\n  –°—Ç–∞—Ç—É—Å: %s\n\n",
                    b.getMachineName(), b.getAssembly(), b.getComment(), b.getWoStatusLocalDescr()));
            }
        }
        if (context.length() == 0) {
            context.append("–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ.\n");
        }
        return String.format(SYSTEM_PROMPT, context) + "\n\n–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + request + "\n\n–î–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç –∫–∞–∫ —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–µ–º–æ–Ω—Ç—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è:";
    }

    /**
     * –§–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç —Å –ø–æ—Ö–æ–∂–∏–º–∏ —Å–ª—É—á–∞—è–º–∏ —Ä–µ–º–æ–Ω—Ç–∞
     */
    public static String buildSimilarCasesPrompt(String request, String machineType, String problemDescription, DatabaseSearchService databaseSearchService) {
        String searchQuery = (machineType != null ? machineType + " " : "") + (problemDescription != null ? problemDescription : "");
        DatabaseSearchService.SearchResult result = databaseSearchService.searchAll(searchQuery.trim(), 10);
        StringBuilder context = new StringBuilder();
        if (!result.summary.isEmpty()) {
            context.append("–ù–ê–ô–î–ï–ù–ù–´–ï –†–ï–®–ï–ù–ò–Ø –ò–ó –ë–ê–ó–´ –°–õ–û–ñ–ù–´–• –†–ï–ú–û–ù–¢–û–í:\n");
            for (var s : result.summary) {
                context.append(String.format("‚Ä¢ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: %s\n  –£–∑–µ–ª: %s\n  –û–ø–∏—Å–∞–Ω–∏–µ: %s\n  –ú–µ—Ä—ã: %s\n  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: %s\n\n",
                    s.getEquipment(), s.getNode(), s.getNotes_on_the_operation_of_the_equipment(), s.getMeasures_taken(), s.getComments()));
            }
        }
        if (!result.equipment.isEmpty()) {
            context.append("–†–µ–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏ —Ä–µ–º–æ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã EquipmentMaintenanceRecord:\n");
            for (var r : result.equipment) {
                context.append(String.format("‚Ä¢ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: %s\n  –£–∑–µ–ª: %s\n  –ü—Ä–æ–±–ª–µ–º–∞: %s\n  –†–µ—à–µ–Ω–∏–µ: %s\n  –°—Ç–∞—Ç—É—Å: %s\n\n",
                    r.getMachineName(), r.getMechanismNode(), r.getDescription(), r.getComments(), r.getStatus()));
            }
        }
        if (!result.breakdowns.isEmpty()) {
            context.append("–û—Ç—á–µ—Ç—ã –æ –ø–æ–ª–æ–º–∫–∞—Ö –∏–∑ –±–∞–∑—ã BreakdownReport:\n");
            for (var b : result.breakdowns) {
                context.append(String.format("‚Ä¢ –ú–∞—à–∏–Ω–∞: %s\n  –£–∑–µ–ª: %s\n  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: %s\n  –°—Ç–∞—Ç—É—Å: %s\n\n",
                    b.getMachineName(), b.getAssembly(), b.getComment(), b.getWoStatusLocalDescr()));
            }
        }
        if (context.length() == 0) {
            context.append("–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ.\n");
        }
        return String.format(SYSTEM_PROMPT, context) + "\n\n–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + request + "\n\n–î–∞–π –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Ä–µ–º–æ–Ω—Ç—É:";
    }

    /**
     * –§–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ —Ä–µ–º–æ–Ω—Ç—É
     */
    public static String buildRepairInstructionPrompt(String request) {
        String instructionPrompt = """
            –¢—ã ‚Äî Kvant AI, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–µ–º–æ–Ω—Ç—É –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.
            –¢–≤–æ—è –∑–∞–¥–∞—á–∞: –¥–∞–≤–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π.
            
            –û—Å–æ–±–µ–Ω–Ω–æ —Ö–æ—Ä–æ—à–æ —Ç—ã —Ä–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è –≤:
            - –£—Ç–µ—á–∫–∞—Ö (–∞–∑–æ—Ç–∞, –ø–∞—Ä–∞, –≤–æ–∑–¥—É—Ö–∞, –º–∞—Å–ª–∞)
            - –ù–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—è—Ö –¥–∞—Ç—á–∏–∫–æ–≤
            - –ü—Ä–æ–±–ª–µ–º–∞—Ö —Å –ø–Ω–µ–≤–º–∞—Ç–∏–∫–æ–π
            - –ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–æ–º–∫–∞—Ö
            - –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—è—Ö
            
            –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
            üîß –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –£–°–¢–†–ê–ù–ï–ù–ò–Æ
            
            1. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:
            2. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞:
            3. –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ:
            4. –ü—Ä–æ–≤–µ—Ä–∫–∞:
            
            ‚ö†Ô∏è –ú–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:
            
            –í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: %s
            
            –î–∞–π –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã:
            """;
        return String.format(instructionPrompt, request);
    }
}